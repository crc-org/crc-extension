#
# Copyright (C) 2024 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
      branch:
        description: 'Branch to use for the release'
        required: true
        default: main
env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

jobs:

  tag:
    name: Tagging
    runs-on: ubuntu-20.04
    outputs:
      githubTag: ${{ steps.TAG_UTIL.outputs.githubTag}}
      extVersion: ${{ steps.TAG_UTIL.outputs.extVersion}}
      releaseId: ${{ steps.create_release.outputs.id}}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
      - name: Generate tag utilities
        id: TAG_UTIL
        run: |
            TAG_PATTERN=${{ github.event.inputs.version }}
            echo "githubTag=v$TAG_PATTERN" >> ${GITHUB_OUTPUT}
            echo "extVersion=$TAG_PATTERN" >> ${GITHUB_OUTPUT}

      - name: tag
        run: |
          git config --local user.name ${{ github.actor }}

          # Add the new version in package.json file
          sed -i  "s#version\":\ \"\(.*\)\",#version\":\ \"${{ steps.TAG_UTIL.outputs.extVersion }}\",#g" package.json
          git add package.json

          # commit the changes
          git commit -m "chore: ü•Å tagging ${{ steps.TAG_UTIL.outputs.githubTag }} ü•≥"
          echo "Tagging with ${{ steps.TAG_UTIL.outputs.githubTag }}"
          git tag ${{ steps.TAG_UTIL.outputs.githubTag }}
          git push origin ${{ steps.TAG_UTIL.outputs.githubTag }}
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ steps.TAG_UTIL.outputs.githubTag }}
          name: ${{ steps.TAG_UTIL.outputs.githubTag }}
          draft: true
          prerelease: true

  build:
    needs: [tag]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.tag.outputs.githubTag }}

      - name: Login to ghcr.io
        run: podman login --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }} ghcr.io

      - name: Build Image
        id: build-image
        run: |
          podman build -t ghcr.io/${{ github.repository_owner }}/crc-extension:${{ needs.tag.outputs.extVersion }} . -f ./oci/Containerfile.multistage
          podman push ghcr.io/${{ github.repository_owner }}/crc-extension:${{ needs.tag.outputs.extVersion }}
          podman tag ghcr.io/${{ github.repository_owner }}/crc-extension:${{ needs.tag.outputs.extVersion }} ghcr.io/${{ github.repository_owner }}/crc-extension:latest
          podman push ghcr.io/${{ github.repository_owner }}/crc-extension:latest


