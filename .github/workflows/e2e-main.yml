#
# Copyright (C) 2024 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: e2e-tests-main

on:
 schedule:
    - cron: '0 0 * * *'
 workflow_dispatch:
    inputs:
      organization:
        default: 'crc-org'
        description: 'CRC Runs Containers'
        type: string
        required: true
      repositoryName:
        default: 'crc-extension'
        description: 'Podman Desktop OpenShift Local Extension repository name'
        type: string
        required: true
      branch:
        default: 'main'
        description: 'Podman Desktop OpenShift Local Extension repo branch'
        type: string
        required: true
      mode:
        description: 'Build mode for Podman Desktop'
        type: choice
        options:
          - production
          - development
          
jobs:
  e2e-tests:
    name: Podman Desktop OpenShift Local Extension E2E tests
    runs-on: ubuntu-24.04
    env: 
      MODE: ${{ inputs.mode || 'production' }}
      REPO: ${{ inputs.repositoryName || 'crc-extension' }}
      ORGANIZATION: ${{ inputs.organization || 'crc-org' }}
      BRANCH: ${{ inputs.branch || 'main' }}
    steps:
      - uses: actions/checkout@v4
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'workflow_run'
        with:
          repository: ${{ env.ORGANIZATION }}/${{ env.REPO }}
          ref: ${{ env.BRANCH }}
          path: ${{ env.REPO }}

      - uses: actions/checkout@v4
        if: github.event_name == 'push'
        with: 
          path: crc-extension

      - name: Setup default repository name
        env: 
          EVENT: ${{ github.event_name }}
        run: |
          repository=crc-extension
          if [[ "$EVENT" == 'workflow_dispatch' || "$EVENT" == 'workflow_run' ]]; then
            repository=${{ env.REPO }}
          fi
          echo "REPOSITORY=$repository" >> $GITHUB_ENV
          
      # Checkout podman desktop
      - uses: actions/checkout@v4
        with:
          repository: containers/podman-desktop
          ref: main
          path: podman-desktop

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false
          package_json_file: ./${{ env.REPO }}/package.json

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          
      - name: Build Podman Desktop for E2E tests Development Mode
        working-directory: ./podman-desktop
        if: ${{ env.MODE == 'development' }}
        run: |
          pnpm install
          pnpm test:e2e:build
          
      - name: Build Podman Desktop for E2E tests Production Mode
        working-directory: ./podman-desktop
        if: ${{ env.MODE == 'production' }} 
        env:
          ELECTRON_ENABLE_INSPECT: true
        run: |
          pnpm install --frozen-lockfile
          pnpm compile:current --linux dir
          path=$(realpath ./dist/linux-unpacked/podman-desktop)
          echo "Podman Desktop built binary: $path"
          echo "PODMAN_DESKTOP_BINARY_PATH=$path" >> $GITHUB_ENV
          
      - name: Execute pnpm in Red Hat OpenShift Local Extension
        working-directory: ${{ env.REPOSITORY }}
        run: |
          # workaround for https://github.com/containers/podman-desktop-extension-bootc/issues/712
          version=$(npm view @podman-desktop/tests-playwright@next version)
          echo "Version of @podman-desktop/tests-playwright to be used: $version"
          jq --arg version "$version" '.devDependencies."@podman-desktop/tests-playwright" = $version' package.json > package.json_tmp && mv package.json_tmp package.json
          pnpm install --no-frozen-lockfile
          
      - name: Run All E2E tests in Red Hat OpenShift Local Extension in Development Mode
        working-directory: ${{ env.REPOSITORY }}
        if: ${{ env.MODE == 'development' }}
        env:
          PODMAN_DESKTOP_ARGS: ${{ github.workspace }}/podman-desktop
        run: pnpm test:e2e

      - name: Run All E2E tests in Red Hat OpenShift Local Extension in Production mode
        working-directory: ${{ env.REPOSITORY }}
        if: ${{ env.MODE == 'production' }}
        env:
          PODMAN_DESKTOP_BINARY: ${{ env.PODMAN_DESKTOP_BINARY_PATH }}
        run: pnpm test:e2e

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-tests
          path: ./**/tests/**/output/
