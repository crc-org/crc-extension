#
# Copyright (C) 2024 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: e2e-tests-main

on:
  schedule:
    - cron: '0 0 * * *'

  workflow_dispatch:
    inputs:
      organization:
        default: 'crc-org'
        description: 'Organization of the Podman Desktop repository'
        type: string
        required: true
      repositoryName:
        default: 'crc-extension'
        description: 'Podman Desktop OpenShift Local Extension repository name'
        type: string
        required: true
      branch:
        default: 'main'
        description: 'Podman Desktop OpenShift Local Extension repo branch'
        type: string
        required: true

jobs:
  e2e-tests:
    name: e2e tests for ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022, ubuntu-24.04, macos-14]
    runs-on: ${{ matrix.os }}
    env:
      SKIP_INSTALLATION: true
    steps:

      - name: Checkout crc extension
        uses: actions/checkout@v4
        with:
          path: crc-extension

      - name: Checkout podman desktop
        uses: actions/checkout@v4
        with:
          repository: podman-desktop/podman-desktop
          ref: main
          path: podman-desktop

      - name: Checkout sso extension (crc-extension dependency)
        uses: actions/checkout@v4
        if: matrix.os == 'windows-2022' || matrix.os == 'macos-14'
        with:
          repository: redhat-developer/podman-desktop-redhat-account-ext
          ref: main
          path: sso-extension

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm 
        uses: pnpm/action-setup@v4
        with:
          run_install: false
          package_json_file: ./podman-desktop/package.json

      - name: Install & build Podman Desktop for E2E tests
        working-directory: ./podman-desktop
        run: |
          pnpm install
          pnpm test:e2e:build
      
      - name: Ensure getting current HEAD version of the test framework (Ubuntu/MacOS)
        if: matrix.os == 'ubuntu-24.04' || matrix.os == 'macos-14' 
        working-directory: ./crc-extension
        run: |
          # workaround for https://github.com/containers/podman-desktop-extension-bootc/issues/712
          version=$(npm view @podman-desktop/tests-playwright@next version)
          echo "Version of @podman-desktop/tests-playwright to be used: $version"
          jq --arg version "$version" '.devDependencies."@podman-desktop/tests-playwright" = $version' package.json > package.json_tmp && mv package.json_tmp package.json
        shell: bash

      - name: Ensure getting current HEAD version of the test framework (Windows)
        if: matrix.os == 'windows-2022' 
        working-directory: ./crc-extension
        run: |
          # workaround for https://github.com/containers/podman-desktop-extension-bootc/issues/712
          # Install scoop installer
          Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
          scoop --version
          # Install jq using scoop
          scoop install jq
          # Fetch the version of the npm package
          $version = npm view @podman-desktop/tests-playwright@next version
          Write-Host "Version of @podman-desktop/tests-playwright to be used: $version"
          # Update package.json using jq
          jq --arg version "$version" '.devDependencies."@podman-desktop/tests-playwright" = $version' package.json > package.json_tmp
          # Replace the old package.json with the updated one
          Move-Item -Path package.json_tmp -Destination package.json -Force
        shell: pwsh

      - name: Revert unprivileged user namespace restrictions in Ubuntu 24.04
        if: matrix.os == 'ubuntu-24.04'
        run: |
          # allow unprivileged user namespace
          sudo sysctl -w kernel.apparmor_restrict_unprivileged_userns=0

      - name: Install & build OpenShift Local extension from container file and SSO dependency (Ubuntu, podman)
        if: matrix.os == 'ubuntu-24.04'
        working-directory: ./crc-extension
        run: |
          yarn install --check-files
          # build crc extension
          podman build -t openshift_local_image . -f ./oci/Containerfile.multistage
          CONTAINER_ID_CRC=$(podman create localhost/openshift_local_image --entrypoint "")
          podman export $CONTAINER_ID_CRC > /tmp/openshift_local_extension.tar
          
          # build sso extension
          podman pull ghcr.io/redhat-developer/podman-desktop-redhat-account-ext:latest
          CONTAINER_ID_SSO=$(podman create ghcr.io/redhat-developer/podman-desktop-redhat-account-ext --entrypoint "")
          podman export $CONTAINER_ID_SSO > /tmp/sso_extension.tar

          # move extension files to expected locations
          mkdir -p tests/playwright/output/crc-tests-pd/plugins
          tar -xf /tmp/openshift_local_extension.tar -C tests/playwright/output/crc-tests-pd/plugins/
          mv tests/playwright/output/crc-tests-pd/plugins/extension/ tests/playwright/output/crc-tests-pd/plugins/crcextension
          tar -xf /tmp/sso_extension.tar -C tests/playwright/output/crc-tests-pd/plugins/
          mv tests/playwright/output/crc-tests-pd/plugins/extension/ tests/playwright/output/crc-tests-pd/plugins/ssoextension
        
      - name: Install & build OpenShift Local extension locally (MacOS) #from container file is not available yet
        if: matrix.os == 'macos-14'
        shell: bash
        working-directory: ./crc-extension
        run: |
          yarn install --check-files
          # -- following https://github.com/crc-org/crc-extension/blob/main/oci/Containerfile.multistage --
          # build extension
          yarn build
          # make expected test folders
          mkdir -p tests/playwright/output/crc-tests-pd/plugins/crcextension
          mkdir -p tests/playwright/output/crc-tests-pd/plugins/ssoextension
          # move necessary files there
          cp -R package.json LICENSE icon.png README.md dist tests/playwright/output/crc-tests-pd/plugins/crcextension

      - name: Install & build OpenShift Local extension locally (Windows) #from container file is not available yet
        if: matrix.os == 'windows-2022'
        working-directory: ./crc-extension
        shell: pwsh
        run: |
          yarn install --check-files
          # -- following https://github.com/crc-org/crc-extension/blob/main/oci/Containerfile.multistage --
          # build extension
          yarn build
          # make expected test folders
          mkdir tests\playwright\output\crc-tests-pd\plugins
          mkdir tests\playwright\output\crc-tests-pd\plugins\crcextension
          mkdir tests\playwright\output\crc-tests-pd\plugins\ssoextension
          # move necessary files there
          'package.json', 'LICENSE', 'icon.png', 'README.md', 'dist' | % { cp $_ ./tests/playwright/output/crc-tests-pd/plugins/crcextension -Recurse -Force}

      - name: Install & build SSO extension (crc dependency) locally (MacOS) #from container file is not available yet
        if: matrix.os == 'macos-14'
        working-directory: ./sso-extension
        shell: bash
        run: |
          pnpm install
          # -- following https://github.com/redhat-developer/podman-desktop-redhat-account-ext/blob/main/Containerfile --
          # build extension
          pnpm build
          # put the contents into its expected folder:
          mkdir -p ../crc-extension/tests/playwright/output/crc-tests-pd/plugins/ssoextension
          cp -R ./builtin/redhat-authentication.cdix/* ../crc-extension/tests/playwright/output/crc-tests-pd/plugins/ssoextension

      - name: Install & build SSO extension (crc dependency) locally (Windows) #from container file is not available yet
        if: matrix.os == 'windows-2022'
        working-directory: ./sso-extension
        shell: pwsh
        run: |
          pnpm install
          # -- following https://github.com/redhat-developer/podman-desktop-redhat-account-ext/blob/main/Containerfile --
          # build extension
          pnpm build
          # put the contents into its expected folder:
          cp .\builtin\redhat-authentication.cdix\* ..\crc-extension\tests\playwright\output\crc-tests-pd\plugins\ssoextension -Recurse -Force

      - name: Run All E2E tests
        working-directory: ./crc-extension
        env:
          PODMAN_DESKTOP_ARGS: ${{ github.workspace }}/podman-desktop
        run: yarn test:e2e
        
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: always() # always run even if the previous step fails
        with:
          fail_on_failure: true
          include_passed: true
          detailed_summary: true
          annotate_only: true
          require_tests:  true
          report_paths: '**/*results.xml'

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-tests-${{ matrix.os }}
          path: ./**/tests/**/output/
